//
// Game.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Game: Codable, JSONEncodable, Hashable {

    static let slugRule = StringRule(minLength: 1, maxLength: nil, pattern: "/^[-a-zA-Z0-9_]+$/")
    static let nameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var id: Int?
    public var slug: String?
    public var name: String?
    public var backgroundImage: String?
    public var platforms: [GamePlatformsInner]?

    public init(id: Int? = nil, slug: String? = nil, name: String? = nil, backgroundImage: String? = nil, platforms: [GamePlatformsInner]? = nil) {
        self.id = id
        self.slug = slug
        self.name = name
        self.backgroundImage = backgroundImage
        self.platforms = platforms
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case slug
        case name
        case backgroundImage = "background_image"
        case platforms
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(backgroundImage, forKey: .backgroundImage)
        try container.encodeIfPresent(platforms, forKey: .platforms)
    }
}

