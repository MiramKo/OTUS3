//
// GamesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GamesAPI {

    /**
     Get a list of game achievements.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesAchievementsRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ParentAchievement?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesAchievementsReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of game achievements.
     - GET /games/{id}/achievements
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<ParentAchievement> 
     */
    open class func gamesAchievementsReadWithRequestBuilder(id: String) -> RequestBuilder<ParentAchievement> {
        var localVariablePath = "/games/{id}/achievements"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ParentAchievement>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of DLC's for the game, GOTY and other editions, companion apps, etc.
     
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesAdditionsList(gamePk: String, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesAdditionsListWithRequestBuilder(gamePk: gamePk, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of DLC's for the game, GOTY and other editions, companion apps, etc.
     - GET /games/{game_pk}/additions
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesList200Response> 
     */
    open class func gamesAdditionsListWithRequestBuilder(gamePk: String, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesList200Response> {
        var localVariablePath = "/games/{game_pk}/additions"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of individual creators that were part of the development team.
     
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesDevelopmentTeamList(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesDevelopmentTeamList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesDevelopmentTeamListWithRequestBuilder(gamePk: gamePk, ordering: ordering, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of individual creators that were part of the development team.
     - GET /games/{game_pk}/development-team
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesDevelopmentTeamList200Response> 
     */
    open class func gamesDevelopmentTeamListWithRequestBuilder(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesDevelopmentTeamList200Response> {
        var localVariablePath = "/games/{game_pk}/development-team"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.encodeToJSON(), isExplode: false),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesDevelopmentTeamList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of games that are part of the same series.
     
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesGameSeriesList(gamePk: String, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesGameSeriesListWithRequestBuilder(gamePk: gamePk, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of games that are part of the same series.
     - GET /games/{game_pk}/game-series
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesList200Response> 
     */
    open class func gamesGameSeriesListWithRequestBuilder(gamePk: String, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesList200Response> {
        var localVariablePath = "/games/{game_pk}/game-series"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of games.
     
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter search: (query) Search query. (optional)
     - parameter searchPrecise: (query) Disable fuzziness for the search query. (optional)
     - parameter searchExact: (query) Mark the search query as exact. (optional)
     - parameter parentPlatforms: (query) Filter by parent platforms, for example: &#x60;1,2,3&#x60;. (optional)
     - parameter platforms: (query) Filter by platforms, for example: &#x60;4,5&#x60;. (optional)
     - parameter stores: (query) Filter by stores, for example: &#x60;5,6&#x60;. (optional)
     - parameter developers: (query) Filter by developers, for example: &#x60;1612,18893&#x60; or &#x60;valve-software,feral-interactive&#x60;. (optional)
     - parameter publishers: (query) Filter by publishers, for example: &#x60;354,20987&#x60; or &#x60;electronic-arts,microsoft-studios&#x60;. (optional)
     - parameter genres: (query) Filter by genres, for example: &#x60;4,51&#x60; or &#x60;action,indie&#x60;. (optional)
     - parameter tags: (query) Filter by tags, for example: &#x60;31,7&#x60; or &#x60;singleplayer,multiplayer&#x60;. (optional)
     - parameter creators: (query) Filter by creators, for example: &#x60;78,28&#x60; or &#x60;cris-velasco,mike-morasky&#x60;. (optional)
     - parameter dates: (query) Filter by a release date, for example: &#x60;2010-01-01,2018-12-31.1960-01-01,1969-12-31&#x60;. (optional)
     - parameter updated: (query) Filter by an update date, for example: &#x60;2020-12-01,2020-12-31&#x60;. (optional)
     - parameter platformsCount: (query) Filter by platforms count, for example: &#x60;1&#x60;. (optional)
     - parameter metacritic: (query) Filter by a metacritic rating, for example: &#x60;80,100&#x60;. (optional)
     - parameter excludeCollection: (query) Exclude games from a particular collection, for example: &#x60;123&#x60;. (optional)
     - parameter excludeAdditions: (query) Exclude additions. (optional)
     - parameter excludeParents: (query) Exclude games which have additions. (optional)
     - parameter excludeGameSeries: (query) Exclude games which included in a game series. (optional)
     - parameter excludeStores: (query) Exclude stores, for example: &#x60;5,6&#x60;. (optional)
     - parameter ordering: (query) Available fields: &#x60;name&#x60;, &#x60;released&#x60;, &#x60;added&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;, &#x60;rating&#x60;, &#x60;metacritic&#x60;. You can reverse the sort order adding a hyphen, for example: &#x60;-released&#x60;. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesList(page: Int? = nil, pageSize: Int? = nil, search: String? = nil, searchPrecise: Bool? = nil, searchExact: Bool? = nil, parentPlatforms: String? = nil, platforms: String? = nil, stores: String? = nil, developers: String? = nil, publishers: String? = nil, genres: String? = nil, tags: String? = nil, creators: String? = nil, dates: String? = nil, updated: String? = nil, platformsCount: Int? = nil, metacritic: String? = nil, excludeCollection: Int? = nil, excludeAdditions: Bool? = nil, excludeParents: Bool? = nil, excludeGameSeries: Bool? = nil, excludeStores: String? = nil, ordering: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesListWithRequestBuilder(page: page, pageSize: pageSize, search: search, searchPrecise: searchPrecise, searchExact: searchExact, parentPlatforms: parentPlatforms, platforms: platforms, stores: stores, developers: developers, publishers: publishers, genres: genres, tags: tags, creators: creators, dates: dates, updated: updated, platformsCount: platformsCount, metacritic: metacritic, excludeCollection: excludeCollection, excludeAdditions: excludeAdditions, excludeParents: excludeParents, excludeGameSeries: excludeGameSeries, excludeStores: excludeStores, ordering: ordering).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of games.
     - GET /games
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter search: (query) Search query. (optional)
     - parameter searchPrecise: (query) Disable fuzziness for the search query. (optional)
     - parameter searchExact: (query) Mark the search query as exact. (optional)
     - parameter parentPlatforms: (query) Filter by parent platforms, for example: &#x60;1,2,3&#x60;. (optional)
     - parameter platforms: (query) Filter by platforms, for example: &#x60;4,5&#x60;. (optional)
     - parameter stores: (query) Filter by stores, for example: &#x60;5,6&#x60;. (optional)
     - parameter developers: (query) Filter by developers, for example: &#x60;1612,18893&#x60; or &#x60;valve-software,feral-interactive&#x60;. (optional)
     - parameter publishers: (query) Filter by publishers, for example: &#x60;354,20987&#x60; or &#x60;electronic-arts,microsoft-studios&#x60;. (optional)
     - parameter genres: (query) Filter by genres, for example: &#x60;4,51&#x60; or &#x60;action,indie&#x60;. (optional)
     - parameter tags: (query) Filter by tags, for example: &#x60;31,7&#x60; or &#x60;singleplayer,multiplayer&#x60;. (optional)
     - parameter creators: (query) Filter by creators, for example: &#x60;78,28&#x60; or &#x60;cris-velasco,mike-morasky&#x60;. (optional)
     - parameter dates: (query) Filter by a release date, for example: &#x60;2010-01-01,2018-12-31.1960-01-01,1969-12-31&#x60;. (optional)
     - parameter updated: (query) Filter by an update date, for example: &#x60;2020-12-01,2020-12-31&#x60;. (optional)
     - parameter platformsCount: (query) Filter by platforms count, for example: &#x60;1&#x60;. (optional)
     - parameter metacritic: (query) Filter by a metacritic rating, for example: &#x60;80,100&#x60;. (optional)
     - parameter excludeCollection: (query) Exclude games from a particular collection, for example: &#x60;123&#x60;. (optional)
     - parameter excludeAdditions: (query) Exclude additions. (optional)
     - parameter excludeParents: (query) Exclude games which have additions. (optional)
     - parameter excludeGameSeries: (query) Exclude games which included in a game series. (optional)
     - parameter excludeStores: (query) Exclude stores, for example: &#x60;5,6&#x60;. (optional)
     - parameter ordering: (query) Available fields: &#x60;name&#x60;, &#x60;released&#x60;, &#x60;added&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;, &#x60;rating&#x60;, &#x60;metacritic&#x60;. You can reverse the sort order adding a hyphen, for example: &#x60;-released&#x60;. (optional)
     - returns: RequestBuilder<GamesList200Response> 
     */
    open class func gamesListWithRequestBuilder(page: Int? = nil, pageSize: Int? = nil, search: String? = nil, searchPrecise: Bool? = nil, searchExact: Bool? = nil, parentPlatforms: String? = nil, platforms: String? = nil, stores: String? = nil, developers: String? = nil, publishers: String? = nil, genres: String? = nil, tags: String? = nil, creators: String? = nil, dates: String? = nil, updated: String? = nil, platformsCount: Int? = nil, metacritic: String? = nil, excludeCollection: Int? = nil, excludeAdditions: Bool? = nil, excludeParents: Bool? = nil, excludeGameSeries: Bool? = nil, excludeStores: String? = nil, ordering: String? = nil) -> RequestBuilder<GamesList200Response> {
        let localVariablePath = "/games"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "search": (wrappedValue: search?.encodeToJSON(), isExplode: false),
            "search_precise": (wrappedValue: searchPrecise?.encodeToJSON(), isExplode: false),
            "search_exact": (wrappedValue: searchExact?.encodeToJSON(), isExplode: false),
            "parent_platforms": (wrappedValue: parentPlatforms?.encodeToJSON(), isExplode: false),
            "platforms": (wrappedValue: platforms?.encodeToJSON(), isExplode: false),
            "stores": (wrappedValue: stores?.encodeToJSON(), isExplode: false),
            "developers": (wrappedValue: developers?.encodeToJSON(), isExplode: false),
            "publishers": (wrappedValue: publishers?.encodeToJSON(), isExplode: false),
            "genres": (wrappedValue: genres?.encodeToJSON(), isExplode: false),
            "tags": (wrappedValue: tags?.encodeToJSON(), isExplode: false),
            "creators": (wrappedValue: creators?.encodeToJSON(), isExplode: false),
            "dates": (wrappedValue: dates?.encodeToJSON(), isExplode: false),
            "updated": (wrappedValue: updated?.encodeToJSON(), isExplode: false),
            "platforms_count": (wrappedValue: platformsCount?.encodeToJSON(), isExplode: false),
            "metacritic": (wrappedValue: metacritic?.encodeToJSON(), isExplode: false),
            "exclude_collection": (wrappedValue: excludeCollection?.encodeToJSON(), isExplode: false),
            "exclude_additions": (wrappedValue: excludeAdditions?.encodeToJSON(), isExplode: false),
            "exclude_parents": (wrappedValue: excludeParents?.encodeToJSON(), isExplode: false),
            "exclude_game_series": (wrappedValue: excludeGameSeries?.encodeToJSON(), isExplode: false),
            "exclude_stores": (wrappedValue: excludeStores?.encodeToJSON(), isExplode: false),
            "ordering": (wrappedValue: ordering?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of game trailers.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesMoviesRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Movie?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesMoviesReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of game trailers.
     - GET /games/{id}/movies
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<Movie> 
     */
    open class func gamesMoviesReadWithRequestBuilder(id: String) -> RequestBuilder<Movie> {
        var localVariablePath = "/games/{id}/movies"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Movie>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of parent games for DLC's and editions.
     
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesParentGamesList(gamePk: String, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesParentGamesListWithRequestBuilder(gamePk: gamePk, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of parent games for DLC's and editions.
     - GET /games/{game_pk}/parent-games
     - parameter gamePk: (path)  
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesList200Response> 
     */
    open class func gamesParentGamesListWithRequestBuilder(gamePk: String, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesList200Response> {
        var localVariablePath = "/games/{game_pk}/parent-games"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get details of the game.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GameSingle?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get details of the game.
     - GET /games/{id}
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<GameSingle> 
     */
    open class func gamesReadWithRequestBuilder(id: String) -> RequestBuilder<GameSingle> {
        var localVariablePath = "/games/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GameSingle>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of most recent posts from the game's subreddit.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesRedditRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Reddit?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesRedditReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of most recent posts from the game's subreddit.
     - GET /games/{id}/reddit
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<Reddit> 
     */
    open class func gamesRedditReadWithRequestBuilder(id: String) -> RequestBuilder<Reddit> {
        var localVariablePath = "/games/{id}/reddit"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Reddit>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get screenshots for the game.
     
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesScreenshotsList(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesScreenshotsList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesScreenshotsListWithRequestBuilder(gamePk: gamePk, ordering: ordering, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get screenshots for the game.
     - GET /games/{game_pk}/screenshots
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesScreenshotsList200Response> 
     */
    open class func gamesScreenshotsListWithRequestBuilder(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesScreenshotsList200Response> {
        var localVariablePath = "/games/{game_pk}/screenshots"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.encodeToJSON(), isExplode: false),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesScreenshotsList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get links to the stores that sell the game.
     
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesStoresList(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GamesStoresList200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesStoresListWithRequestBuilder(gamePk: gamePk, ordering: ordering, page: page, pageSize: pageSize).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get links to the stores that sell the game.
     - GET /games/{game_pk}/stores
     - parameter gamePk: (path)  
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter pageSize: (query) Number of results to return per page. (optional)
     - returns: RequestBuilder<GamesStoresList200Response> 
     */
    open class func gamesStoresListWithRequestBuilder(gamePk: String, ordering: String? = nil, page: Int? = nil, pageSize: Int? = nil) -> RequestBuilder<GamesStoresList200Response> {
        var localVariablePath = "/games/{game_pk}/stores"
        let gamePkPreEscape = "\(APIHelper.mapValueToPathItem(gamePk))"
        let gamePkPostEscape = gamePkPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{game_pk}", with: gamePkPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ordering": (wrappedValue: ordering?.encodeToJSON(), isExplode: false),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GamesStoresList200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of visually similar games, available only for business and enterprise API users.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesSuggestedRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GameSingle?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesSuggestedReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get a list of visually similar games, available only for business and enterprise API users.
     - GET /games/{id}/suggested
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<GameSingle> 
     */
    open class func gamesSuggestedReadWithRequestBuilder(id: String) -> RequestBuilder<GameSingle> {
        var localVariablePath = "/games/{id}/suggested"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GameSingle>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get streams on Twitch associated with the game, available only for business and enterprise API users.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesTwitchRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Twitch?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesTwitchReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get streams on Twitch associated with the game, available only for business and enterprise API users.
     - GET /games/{id}/twitch
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<Twitch> 
     */
    open class func gamesTwitchReadWithRequestBuilder(id: String) -> RequestBuilder<Twitch> {
        var localVariablePath = "/games/{id}/twitch"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Twitch>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get videos from YouTube associated with the game, available only for business and enterprise API users.
     
     - parameter id: (path) An ID or a slug identifying this Game. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func gamesYoutubeRead(id: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Youtube?, _ error: Error?) -> Void)) -> RequestTask {
        return gamesYoutubeReadWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get videos from YouTube associated with the game, available only for business and enterprise API users.
     - GET /games/{id}/youtube
     - parameter id: (path) An ID or a slug identifying this Game. 
     - returns: RequestBuilder<Youtube> 
     */
    open class func gamesYoutubeReadWithRequestBuilder(id: String) -> RequestBuilder<Youtube> {
        var localVariablePath = "/games/{id}/youtube"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Youtube>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
